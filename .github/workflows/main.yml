# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { XDG_RUNTIME_DIR: "" }
          - { XDG_RUNTIME_DIR: "/tmp/docker-testcontainers/" }

    env:
      XDG_RUNTIME_DIR: ${{ matrix.XDG_RUNTIME_DIR }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b

      - name: debug
        run: id -u; whoami
      - name: uninstall rootful Docker
        run: sudo apt-get -q -y --purge remove moby-engine moby-buildx && sudo rm -rf /var/run/docker.sock
      - name: install rootless Docker
        run: |
          mkdir -p $XDG_RUNTIME_DIR || true
          curl -fsSL https://get.docker.com/rootless | sh > init.sh
          cat init.sh
          source <(grep '^export' init.sh)
          PATH=$HOME/bin:$PATH dockerd-rootless.sh --experimental --storage-driver vfs &
          sleep 1
          DOCKER_HOST=unix://$XDG_RUNTIME_DIR/docker.sock docker info || ls -la $XDG_RUNTIME_DIR

      - name: Build with Gradle
        uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
        with:
          arguments: build
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "**/test-results/**/*.xml"