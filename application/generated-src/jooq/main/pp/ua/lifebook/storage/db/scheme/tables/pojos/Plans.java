/*
 * This file is generated by jOOQ.
 */
package pp.ua.lifebook.storage.db.scheme.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Plans implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer       id;
    private final String        title;
    private final String        repeated;
    private final String        comments;
    private final String        status;
    private final Integer       userId;
    private final Integer       category;
    private final LocalDateTime dueTime;

    public Plans(Plans value) {
        this.id = value.id;
        this.title = value.title;
        this.repeated = value.repeated;
        this.comments = value.comments;
        this.status = value.status;
        this.userId = value.userId;
        this.category = value.category;
        this.dueTime = value.dueTime;
    }

    public Plans(
        Integer       id,
        String        title,
        String        repeated,
        String        comments,
        String        status,
        Integer       userId,
        Integer       category,
        LocalDateTime dueTime
    ) {
        this.id = id;
        this.title = title;
        this.repeated = repeated;
        this.comments = comments;
        this.status = status;
        this.userId = userId;
        this.category = category;
        this.dueTime = dueTime;
    }

    /**
     * Getter for <code>public.plans.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.plans.title</code>.
     */
    public String getTitle() {
        return this.title;
    }

    /**
     * Getter for <code>public.plans.repeated</code>. code of RepeatType
     */
    public String getRepeated() {
        return this.repeated;
    }

    /**
     * Getter for <code>public.plans.comments</code>.
     */
    public String getComments() {
        return this.comments;
    }

    /**
     * Getter for <code>public.plans.status</code>.
     */
    public String getStatus() {
        return this.status;
    }

    /**
     * Getter for <code>public.plans.user_id</code>.
     */
    public Integer getUserId() {
        return this.userId;
    }

    /**
     * Getter for <code>public.plans.category</code>.
     */
    public Integer getCategory() {
        return this.category;
    }

    /**
     * Getter for <code>public.plans.due_time</code>.
     */
    public LocalDateTime getDueTime() {
        return this.dueTime;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Plans other = (Plans) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (title == null) {
            if (other.title != null)
                return false;
        }
        else if (!title.equals(other.title))
            return false;
        if (repeated == null) {
            if (other.repeated != null)
                return false;
        }
        else if (!repeated.equals(other.repeated))
            return false;
        if (comments == null) {
            if (other.comments != null)
                return false;
        }
        else if (!comments.equals(other.comments))
            return false;
        if (status == null) {
            if (other.status != null)
                return false;
        }
        else if (!status.equals(other.status))
            return false;
        if (userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!userId.equals(other.userId))
            return false;
        if (category == null) {
            if (other.category != null)
                return false;
        }
        else if (!category.equals(other.category))
            return false;
        if (dueTime == null) {
            if (other.dueTime != null)
                return false;
        }
        else if (!dueTime.equals(other.dueTime))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.title == null) ? 0 : this.title.hashCode());
        result = prime * result + ((this.repeated == null) ? 0 : this.repeated.hashCode());
        result = prime * result + ((this.comments == null) ? 0 : this.comments.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.category == null) ? 0 : this.category.hashCode());
        result = prime * result + ((this.dueTime == null) ? 0 : this.dueTime.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Plans (");

        sb.append(id);
        sb.append(", ").append(title);
        sb.append(", ").append(repeated);
        sb.append(", ").append(comments);
        sb.append(", ").append(status);
        sb.append(", ").append(userId);
        sb.append(", ").append(category);
        sb.append(", ").append(dueTime);

        sb.append(")");
        return sb.toString();
    }
}
