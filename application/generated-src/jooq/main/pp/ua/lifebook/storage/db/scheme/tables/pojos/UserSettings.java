/*
 * This file is generated by jOOQ.
 */
package pp.ua.lifebook.storage.db.scheme.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserSettings implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String  viewOptions;
    private final Integer userId;
    private final String  defaultTab;

    public UserSettings(UserSettings value) {
        this.viewOptions = value.viewOptions;
        this.userId = value.userId;
        this.defaultTab = value.defaultTab;
    }

    public UserSettings(
        String  viewOptions,
        Integer userId,
        String  defaultTab
    ) {
        this.viewOptions = viewOptions;
        this.userId = userId;
        this.defaultTab = defaultTab;
    }

    /**
     * Getter for <code>public.user_settings.view_options</code>.
     */
    public String getViewOptions() {
        return this.viewOptions;
    }

    /**
     * Getter for <code>public.user_settings.user_id</code>.
     */
    public Integer getUserId() {
        return this.userId;
    }

    /**
     * Getter for <code>public.user_settings.default_tab</code>.
     */
    public String getDefaultTab() {
        return this.defaultTab;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final UserSettings other = (UserSettings) obj;
        if (viewOptions == null) {
            if (other.viewOptions != null)
                return false;
        }
        else if (!viewOptions.equals(other.viewOptions))
            return false;
        if (userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!userId.equals(other.userId))
            return false;
        if (defaultTab == null) {
            if (other.defaultTab != null)
                return false;
        }
        else if (!defaultTab.equals(other.defaultTab))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.viewOptions == null) ? 0 : this.viewOptions.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.defaultTab == null) ? 0 : this.defaultTab.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UserSettings (");

        sb.append(viewOptions);
        sb.append(", ").append(userId);
        sb.append(", ").append(defaultTab);

        sb.append(")");
        return sb.toString();
    }
}
