/*
 * This file is generated by jOOQ.
 */
package pp.ua.lifebook.storage.db.scheme.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import pp.ua.lifebook.storage.db.scheme.tables.Plans;

import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlansRecord extends UpdatableRecordImpl<PlansRecord> implements Record8<Integer, String, String, String, String, Integer, Integer, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.plans.id</code>.
     */
    public PlansRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.plans.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.plans.title</code>.
     */
    public PlansRecord setTitle(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.plans.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.plans.repeated</code>. code of RepeatType
     */
    public PlansRecord setRepeated(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.plans.repeated</code>. code of RepeatType
     */
    public String getRepeated() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.plans.comments</code>.
     */
    public PlansRecord setComments(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.plans.comments</code>.
     */
    public String getComments() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.plans.status</code>.
     */
    public PlansRecord setStatus(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.plans.status</code>.
     */
    public String getStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.plans.user_id</code>.
     */
    public PlansRecord setUserId(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.plans.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.plans.category</code>.
     */
    public PlansRecord setCategory(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.plans.category</code>.
     */
    public Integer getCategory() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>public.plans.due_time</code>.
     */
    public PlansRecord setDueTime(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.plans.due_time</code>.
     */
    public LocalDateTime getDueTime() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, String, String, String, Integer, Integer, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, String, String, String, String, Integer, Integer, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Plans.PLANS.ID;
    }

    @Override
    public Field<String> field2() {
        return Plans.PLANS.TITLE;
    }

    @Override
    public Field<String> field3() {
        return Plans.PLANS.REPEATED;
    }

    @Override
    public Field<String> field4() {
        return Plans.PLANS.COMMENTS;
    }

    @Override
    public Field<String> field5() {
        return Plans.PLANS.STATUS;
    }

    @Override
    public Field<Integer> field6() {
        return Plans.PLANS.USER_ID;
    }

    @Override
    public Field<Integer> field7() {
        return Plans.PLANS.CATEGORY;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Plans.PLANS.DUE_TIME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getRepeated();
    }

    @Override
    public String component4() {
        return getComments();
    }

    @Override
    public String component5() {
        return getStatus();
    }

    @Override
    public Integer component6() {
        return getUserId();
    }

    @Override
    public Integer component7() {
        return getCategory();
    }

    @Override
    public LocalDateTime component8() {
        return getDueTime();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getRepeated();
    }

    @Override
    public String value4() {
        return getComments();
    }

    @Override
    public String value5() {
        return getStatus();
    }

    @Override
    public Integer value6() {
        return getUserId();
    }

    @Override
    public Integer value7() {
        return getCategory();
    }

    @Override
    public LocalDateTime value8() {
        return getDueTime();
    }

    @Override
    public PlansRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public PlansRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public PlansRecord value3(String value) {
        setRepeated(value);
        return this;
    }

    @Override
    public PlansRecord value4(String value) {
        setComments(value);
        return this;
    }

    @Override
    public PlansRecord value5(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public PlansRecord value6(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public PlansRecord value7(Integer value) {
        setCategory(value);
        return this;
    }

    @Override
    public PlansRecord value8(LocalDateTime value) {
        setDueTime(value);
        return this;
    }

    @Override
    public PlansRecord values(Integer value1, String value2, String value3, String value4, String value5, Integer value6, Integer value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlansRecord
     */
    public PlansRecord() {
        super(Plans.PLANS);
    }

    /**
     * Create a detached, initialised PlansRecord
     */
    public PlansRecord(Integer id, String title, String repeated, String comments, String status, Integer userId, Integer category, LocalDateTime dueTime) {
        super(Plans.PLANS);

        setId(id);
        setTitle(title);
        setRepeated(repeated);
        setComments(comments);
        setStatus(status);
        setUserId(userId);
        setCategory(category);
        setDueTime(dueTime);
    }

    /**
     * Create a detached, initialised PlansRecord
     */
    public PlansRecord(pp.ua.lifebook.storage.db.scheme.tables.pojos.Plans value) {
        super(Plans.PLANS);

        if (value != null) {
            setId(value.getId());
            setTitle(value.getTitle());
            setRepeated(value.getRepeated());
            setComments(value.getComments());
            setStatus(value.getStatus());
            setUserId(value.getUserId());
            setCategory(value.getCategory());
            setDueTime(value.getDueTime());
        }
    }
}
