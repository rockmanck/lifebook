/*
 * This file is generated by jOOQ.
 */
package pp.ua.lifebook.storage.db.scheme.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import pp.ua.lifebook.storage.db.scheme.tables.UserSettings;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserSettingsRecord extends UpdatableRecordImpl<UserSettingsRecord> implements Record3<String, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user_settings.view_options</code>.
     */
    public UserSettingsRecord setViewOptions(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.user_settings.view_options</code>.
     */
    public String getViewOptions() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.user_settings.user_id</code>.
     */
    public UserSettingsRecord setUserId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.user_settings.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.user_settings.default_tab</code>.
     */
    public UserSettingsRecord setDefaultTab(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.user_settings.default_tab</code>.
     */
    public String getDefaultTab() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, Integer, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return UserSettings.USER_SETTINGS.VIEW_OPTIONS;
    }

    @Override
    public Field<Integer> field2() {
        return UserSettings.USER_SETTINGS.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return UserSettings.USER_SETTINGS.DEFAULT_TAB;
    }

    @Override
    public String component1() {
        return getViewOptions();
    }

    @Override
    public Integer component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getDefaultTab();
    }

    @Override
    public String value1() {
        return getViewOptions();
    }

    @Override
    public Integer value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getDefaultTab();
    }

    @Override
    public UserSettingsRecord value1(String value) {
        setViewOptions(value);
        return this;
    }

    @Override
    public UserSettingsRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserSettingsRecord value3(String value) {
        setDefaultTab(value);
        return this;
    }

    @Override
    public UserSettingsRecord values(String value1, Integer value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserSettingsRecord
     */
    public UserSettingsRecord() {
        super(UserSettings.USER_SETTINGS);
    }

    /**
     * Create a detached, initialised UserSettingsRecord
     */
    public UserSettingsRecord(String viewOptions, Integer userId, String defaultTab) {
        super(UserSettings.USER_SETTINGS);

        setViewOptions(viewOptions);
        setUserId(userId);
        setDefaultTab(defaultTab);
    }

    /**
     * Create a detached, initialised UserSettingsRecord
     */
    public UserSettingsRecord(pp.ua.lifebook.storage.db.scheme.tables.pojos.UserSettings value) {
        super(UserSettings.USER_SETTINGS);

        if (value != null) {
            setViewOptions(value.getViewOptions());
            setUserId(value.getUserId());
            setDefaultTab(value.getDefaultTab());
        }
    }
}
