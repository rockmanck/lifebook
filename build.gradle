buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        configurations.maybeCreate("pitest")
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.4.0'
        pitest 'org.pitest:pitest-junit5-plugin:0.9'
    }
}

plugins {
    id "java"
    id 'idea'
    id "org.springframework.boot" version "2.6.2" apply(false)
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

ext {
    flyway_version = '8.1.0'
    junit5_version = '5.8.2'
    assertJ_version = '3.21.0'
    jooq_version = '3.15.5'
    testcontainersVersion = '1.17.1'
    libs = [
        logging: [
            'ch.qos.logback:logback-classic:1.2.10'
            , 'ch.qos.logback:logback-core:1.2.10'
            , 'org.codehaus.janino:janino:3.1.6'
        ],
        assertJ: "org.assertj:assertj-core:${assertJ_version}",
        testcontainers: [
            "org.testcontainers:testcontainers:${testcontainersVersion}"
            , "org.testcontainers:junit-jupiter:${testcontainersVersion}"
        ],
    ]
}
ext['junit-jupiter.version'] = "${junit5_version}"

allprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'

    group 'pp.ua.lifebook'
    // todo add checkstyle plugin
    repositories {
        mavenCentral()
    }

    test {
        useJUnitPlatform()
    }

    jacocoTestReport {
        reports {
            xml.required = false
            csv.required = true
            html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
        }
    }

    test.finalizedBy jacocoTestReport
}

dependencies {
    implementation project(':infrastructure:postgres-db')
    implementation project(':domain')

    implementation libs.logging
    implementation 'com.google.api-client:google-api-client:1.22.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.22.0'
    implementation 'com.google.apis:google-api-services-calendar:v3-rev249-1.22.0'

    implementation files('lib/RockmanUtils.jar')

    testImplementation libs.assertJ
    testImplementation "org.junit.jupiter:junit-jupiter:${junit5_version}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junit5_version}"
}

test {
    useJUnitPlatform()
}