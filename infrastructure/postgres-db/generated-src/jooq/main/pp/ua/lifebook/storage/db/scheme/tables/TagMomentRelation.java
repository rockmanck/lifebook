/*
 * This file is generated by jOOQ.
 */
package pp.ua.lifebook.storage.db.scheme.tables;


import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import pp.ua.lifebook.storage.db.scheme.Public;
import pp.ua.lifebook.storage.db.scheme.tables.records.TagMomentRelationRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TagMomentRelation extends TableImpl<TagMomentRelationRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.tag_moment_relation</code>
     */
    public static final TagMomentRelation TAG_MOMENT_RELATION = new TagMomentRelation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TagMomentRelationRecord> getRecordType() {
        return TagMomentRelationRecord.class;
    }

    /**
     * The column <code>public.tag_moment_relation.tag_id</code>.
     */
    public final TableField<TagMomentRelationRecord, Integer> TAG_ID = createField(DSL.name("tag_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.tag_moment_relation.moment_id</code>.
     */
    public final TableField<TagMomentRelationRecord, Integer> MOMENT_ID = createField(DSL.name("moment_id"), SQLDataType.INTEGER, this, "");

    private TagMomentRelation(Name alias, Table<TagMomentRelationRecord> aliased) {
        this(alias, aliased, null);
    }

    private TagMomentRelation(Name alias, Table<TagMomentRelationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.tag_moment_relation</code> table reference
     */
    public TagMomentRelation(String alias) {
        this(DSL.name(alias), TAG_MOMENT_RELATION);
    }

    /**
     * Create an aliased <code>public.tag_moment_relation</code> table reference
     */
    public TagMomentRelation(Name alias) {
        this(alias, TAG_MOMENT_RELATION);
    }

    /**
     * Create a <code>public.tag_moment_relation</code> table reference
     */
    public TagMomentRelation() {
        this(DSL.name("tag_moment_relation"), null);
    }

    public <O extends Record> TagMomentRelation(Table<O> child, ForeignKey<O, TagMomentRelationRecord> key) {
        super(child, key, TAG_MOMENT_RELATION);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public TagMomentRelation as(String alias) {
        return new TagMomentRelation(DSL.name(alias), this);
    }

    @Override
    public TagMomentRelation as(Name alias) {
        return new TagMomentRelation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TagMomentRelation rename(String name) {
        return new TagMomentRelation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TagMomentRelation rename(Name name) {
        return new TagMomentRelation(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
