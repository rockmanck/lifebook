/*
 * This file is generated by jOOQ.
 */
package pp.ua.lifebook.storage.db.scheme.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ListItems implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer id;
    private final Integer listId;
    private final String  name;
    private final String  comment;
    private final Boolean completed;

    public ListItems(ListItems value) {
        this.id = value.id;
        this.listId = value.listId;
        this.name = value.name;
        this.comment = value.comment;
        this.completed = value.completed;
    }

    public ListItems(
        Integer id,
        Integer listId,
        String  name,
        String  comment,
        Boolean completed
    ) {
        this.id = id;
        this.listId = listId;
        this.name = name;
        this.comment = comment;
        this.completed = completed;
    }

    /**
     * Getter for <code>public.list_items.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.list_items.list_id</code>.
     */
    public Integer getListId() {
        return this.listId;
    }

    /**
     * Getter for <code>public.list_items.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Getter for <code>public.list_items.comment</code>.
     */
    public String getComment() {
        return this.comment;
    }

    /**
     * Getter for <code>public.list_items.completed</code>.
     */
    public Boolean getCompleted() {
        return this.completed;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ListItems other = (ListItems) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (listId == null) {
            if (other.listId != null)
                return false;
        }
        else if (!listId.equals(other.listId))
            return false;
        if (name == null) {
            if (other.name != null)
                return false;
        }
        else if (!name.equals(other.name))
            return false;
        if (comment == null) {
            if (other.comment != null)
                return false;
        }
        else if (!comment.equals(other.comment))
            return false;
        if (completed == null) {
            if (other.completed != null)
                return false;
        }
        else if (!completed.equals(other.completed))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.listId == null) ? 0 : this.listId.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.comment == null) ? 0 : this.comment.hashCode());
        result = prime * result + ((this.completed == null) ? 0 : this.completed.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ListItems (");

        sb.append(id);
        sb.append(", ").append(listId);
        sb.append(", ").append(name);
        sb.append(", ").append(comment);
        sb.append(", ").append(completed);

        sb.append(")");
        return sb.toString();
    }
}
