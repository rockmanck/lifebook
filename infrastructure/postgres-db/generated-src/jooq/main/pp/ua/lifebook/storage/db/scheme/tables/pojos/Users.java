/*
 * This file is generated by jOOQ.
 */
package pp.ua.lifebook.storage.db.scheme.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Users implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer id;
    private final String  login;
    private final String  firstName;
    private final String  lastName;
    private final String  email;
    private final String  password;
    private final Boolean isAdmin;
    private final String  language;

    public Users(Users value) {
        this.id = value.id;
        this.login = value.login;
        this.firstName = value.firstName;
        this.lastName = value.lastName;
        this.email = value.email;
        this.password = value.password;
        this.isAdmin = value.isAdmin;
        this.language = value.language;
    }

    public Users(
        Integer id,
        String  login,
        String  firstName,
        String  lastName,
        String  email,
        String  password,
        Boolean isAdmin,
        String  language
    ) {
        this.id = id;
        this.login = login;
        this.firstName = firstName;
        this.lastName = lastName;
        this.email = email;
        this.password = password;
        this.isAdmin = isAdmin;
        this.language = language;
    }

    /**
     * Getter for <code>public.users.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.users.login</code>.
     */
    public String getLogin() {
        return this.login;
    }

    /**
     * Getter for <code>public.users.first_name</code>.
     */
    public String getFirstName() {
        return this.firstName;
    }

    /**
     * Getter for <code>public.users.last_name</code>.
     */
    public String getLastName() {
        return this.lastName;
    }

    /**
     * Getter for <code>public.users.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Getter for <code>public.users.password</code>.
     */
    public String getPassword() {
        return this.password;
    }

    /**
     * Getter for <code>public.users.is_admin</code>.
     */
    public Boolean getIsAdmin() {
        return this.isAdmin;
    }

    /**
     * Getter for <code>public.users.language</code>. two symbol language code
     */
    public String getLanguage() {
        return this.language;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Users other = (Users) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (login == null) {
            if (other.login != null)
                return false;
        }
        else if (!login.equals(other.login))
            return false;
        if (firstName == null) {
            if (other.firstName != null)
                return false;
        }
        else if (!firstName.equals(other.firstName))
            return false;
        if (lastName == null) {
            if (other.lastName != null)
                return false;
        }
        else if (!lastName.equals(other.lastName))
            return false;
        if (email == null) {
            if (other.email != null)
                return false;
        }
        else if (!email.equals(other.email))
            return false;
        if (password == null) {
            if (other.password != null)
                return false;
        }
        else if (!password.equals(other.password))
            return false;
        if (isAdmin == null) {
            if (other.isAdmin != null)
                return false;
        }
        else if (!isAdmin.equals(other.isAdmin))
            return false;
        if (language == null) {
            if (other.language != null)
                return false;
        }
        else if (!language.equals(other.language))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.login == null) ? 0 : this.login.hashCode());
        result = prime * result + ((this.firstName == null) ? 0 : this.firstName.hashCode());
        result = prime * result + ((this.lastName == null) ? 0 : this.lastName.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.isAdmin == null) ? 0 : this.isAdmin.hashCode());
        result = prime * result + ((this.language == null) ? 0 : this.language.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Users (");

        sb.append(id);
        sb.append(", ").append(login);
        sb.append(", ").append(firstName);
        sb.append(", ").append(lastName);
        sb.append(", ").append(email);
        sb.append(", ").append(password);
        sb.append(", ").append(isAdmin);
        sb.append(", ").append(language);

        sb.append(")");
        return sb.toString();
    }
}
