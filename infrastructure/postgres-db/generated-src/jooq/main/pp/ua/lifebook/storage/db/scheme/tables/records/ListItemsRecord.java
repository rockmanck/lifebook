/*
 * This file is generated by jOOQ.
 */
package pp.ua.lifebook.storage.db.scheme.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import pp.ua.lifebook.storage.db.scheme.tables.ListItems;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ListItemsRecord extends UpdatableRecordImpl<ListItemsRecord> implements Record5<Integer, Integer, String, String, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.list_items.id</code>.
     */
    public ListItemsRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.list_items.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.list_items.list_id</code>.
     */
    public ListItemsRecord setListId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.list_items.list_id</code>.
     */
    public Integer getListId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.list_items.name</code>.
     */
    public ListItemsRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.list_items.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.list_items.comment</code>.
     */
    public ListItemsRecord setComment(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.list_items.comment</code>.
     */
    public String getComment() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.list_items.completed</code>.
     */
    public ListItemsRecord setCompleted(Boolean value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.list_items.completed</code>.
     */
    public Boolean getCompleted() {
        return (Boolean) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, String, String, Boolean> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, Integer, String, String, Boolean> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ListItems.LIST_ITEMS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return ListItems.LIST_ITEMS.LIST_ID;
    }

    @Override
    public Field<String> field3() {
        return ListItems.LIST_ITEMS.NAME;
    }

    @Override
    public Field<String> field4() {
        return ListItems.LIST_ITEMS.COMMENT;
    }

    @Override
    public Field<Boolean> field5() {
        return ListItems.LIST_ITEMS.COMPLETED;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getListId();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getComment();
    }

    @Override
    public Boolean component5() {
        return getCompleted();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getListId();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getComment();
    }

    @Override
    public Boolean value5() {
        return getCompleted();
    }

    @Override
    public ListItemsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ListItemsRecord value2(Integer value) {
        setListId(value);
        return this;
    }

    @Override
    public ListItemsRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public ListItemsRecord value4(String value) {
        setComment(value);
        return this;
    }

    @Override
    public ListItemsRecord value5(Boolean value) {
        setCompleted(value);
        return this;
    }

    @Override
    public ListItemsRecord values(Integer value1, Integer value2, String value3, String value4, Boolean value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ListItemsRecord
     */
    public ListItemsRecord() {
        super(ListItems.LIST_ITEMS);
    }

    /**
     * Create a detached, initialised ListItemsRecord
     */
    public ListItemsRecord(Integer id, Integer listId, String name, String comment, Boolean completed) {
        super(ListItems.LIST_ITEMS);

        setId(id);
        setListId(listId);
        setName(name);
        setComment(comment);
        setCompleted(completed);
    }

    /**
     * Create a detached, initialised ListItemsRecord
     */
    public ListItemsRecord(pp.ua.lifebook.storage.db.scheme.tables.pojos.ListItems value) {
        super(ListItems.LIST_ITEMS);

        if (value != null) {
            setId(value.getId());
            setListId(value.getListId());
            setName(value.getName());
            setComment(value.getComment());
            setCompleted(value.getCompleted());
        }
    }
}
